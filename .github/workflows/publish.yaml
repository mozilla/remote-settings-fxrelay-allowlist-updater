name: Build and Publish Docker image

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: read
  id-token: write

env:
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1 # Reduce warnings from Docker Buildx
  GAR_LOCATION: us
  # On tag, use prod project; otherwise, use nonprod
  GCP_PROJECT_ID: moz-fx-remote-settings-${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && 'prod' || 'nonprod' }}
  GAR_REPOSITORY: ingestion-job-${{ github.repository }}
  GAR_IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch everything (tags)
          fetch-tags: true

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.GAR_IMAGE_NAME }}
          # https://github.com/marketplace/actions/docker-metadata-action#tags-input
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=,enable={{is_default_branch}}

      - id: gcp_auth
        name: Log into GCP
        uses: google-github-actions/auth@v2
        if: github.event_name != 'pull_request'
        with:
          token_format: access_token
          service_account: artifact-writer@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com
          workload_identity_provider: ${{ vars.GCPV2_GITHUB_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Login to GAR
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp_auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,buildkit=true
          cache-to: type=gha,mode=max,buildkit=true
